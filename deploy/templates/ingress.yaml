---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ws-ingress-{{ .Release.Name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      }

spec:
  rules:
    - host: "{{ .Values.application.ingress.host }}"
      http:
        paths:
          - path: "/{{ .Values.application.ingress.socket_prefix }}/"
            backend:
              serviceName: backend-{{ .Release.Name }}
              servicePort: {{ .Values.backend.port }}
  tls:
    - hosts:
        - "{{ .Values.application.ingress.host }}"
      secretName: "{{ .Values.application.ingress.secretName }}"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: main-ingress-{{ .Release.Name }}
spec:
  rules:
    - host: "{{ .Values.application.ingress.host }}"
      http:
          - path: "{{ .Values.application.ingress.path }}"
            backend:
              serviceName: frontend-{{ .Release.Name }}
              servicePort: {{ .Values.frontend.port }}
  tls:
    - hosts:
        - "{{ .Values.application.ingress.host }}"
      secretName: "{{ .Values.application.ingress.secretName }}"